<% if(Setting.plugin_enhanced_queries['enable'] == 'true') %>

	<% if @project %>
		
		<% specific_roles = Setting.plugin_enhanced_queries['specific_roles'].nil? ? [] : Setting.plugin_enhanced_queries['specific_roles'] %>
		<% custom_rule = Setting.plugin_enhanced_queries['custom_rule'].nil? ? nil : Setting.plugin_enhanced_queries['custom_rule'] %>
	
		<% roles = IssuesHelper.render_queries_by_role(@project) %>
		<% i = 0 %>
		
		
		<% @project.users_by_role.sort_by{|k,v| k.name}.each do |role, users| %>
			<% if i==0 %>
				<h3><%= l(:queries_by_roles) %></h3>
				<ul>
			<% end %>

			<% custom_filter = specific_roles.include?(role.id.to_s) ? custom_rule : :assigned_to_id %>

			<li><%= role.name %>
				<ul><li><nobr><%= users.sort.collect{|u| (link_to u.name,
																								 IssuesHelper.options_for_filter([[ :status_id, 'o', ''], [ custom_filter, '=',  u.id]], 
                                                 {:project_id => @project.identifier, :group_by => "status"})) + 
                                               	 (Setting.plugin_enhanced_queries['show_count'] ? "<span class=\"count\">(#{h IssuesHelper.get_open_issues_on_user(custom_filter, u.id, @project)})</span>" : '').html_safe
                                            }.join("</nobr></li><li><nobr>").html_safe %></nobr></li></ul>
			</li>

			<% i+=1 %>
		<% end %>

	<% if i!=0 %>
		</ul>
	<% end %>

	<% end %>
<% end %>


